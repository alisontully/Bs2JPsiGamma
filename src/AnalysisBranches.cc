///////////////////////////////////////
// AnalysisBranches.cc               //
// Author: Matthew Kenzie            //
// Auto-generated                    //
///////////////////////////////////////

#include "../interface/AnalysisBranches.h"

AnalysisBranches::AnalysisBranches(){} 																	 
AnalysisBranches::~AnalysisBranches(){} 																	 
void AnalysisBranches::setInputBranches(Looper *l, TTree *tree){ 
	if (l->itype<0) tree->SetBranchAddress("B0_BKGCAT", l->B0_BKGCAT, &(l->b_B0_BKGCAT));
	tree->SetBranchAddress("B0_BPVVDZ", l->B0_BPVVDZ, &(l->b_B0_BPVVDZ));
	tree->SetBranchAddress("B0_Corrected_Mass", l->B0_Corrected_Mass, &(l->b_B0_Corrected_Mass));
	tree->SetBranchAddress("B0_DIRA_OWNPV", l->B0_DIRA_OWNPV, &(l->b_B0_DIRA_OWNPV));
	tree->SetBranchAddress("B0_ENDVERTEX_CHI2", l->B0_ENDVERTEX_CHI2, &(l->b_B0_ENDVERTEX_CHI2));
	tree->SetBranchAddress("B0_FD_CHI2", l->B0_FD_CHI2, &(l->b_B0_FD_CHI2));
	tree->SetBranchAddress("B0_Hlt1DiMuonHighMassDecision_TOS", l->B0_Hlt1DiMuonHighMassDecision_TOS, &(l->b_B0_Hlt1DiMuonHighMassDecision_TOS));
	tree->SetBranchAddress("B0_Hlt1Global_TIS", l->B0_Hlt1Global_TIS, &(l->b_B0_Hlt1Global_TIS));
	tree->SetBranchAddress("B0_Hlt1Global_TOS", l->B0_Hlt1Global_TOS, &(l->b_B0_Hlt1Global_TOS));
	tree->SetBranchAddress("B0_Hlt1Phys_TOS", l->B0_Hlt1Phys_TOS, &(l->b_B0_Hlt1Phys_TOS));
	tree->SetBranchAddress("B0_Hlt1SingleMuonHighPTDecision_TOS", l->B0_Hlt1SingleMuonHighPTDecision_TOS, &(l->b_B0_Hlt1SingleMuonHighPTDecision_TOS));
	tree->SetBranchAddress("B0_Hlt1TrackAllL0Decision_TOS", l->B0_Hlt1TrackAllL0Decision_TOS, &(l->b_B0_Hlt1TrackAllL0Decision_TOS));
	tree->SetBranchAddress("B0_Hlt1TrackMuonDecision_TOS", l->B0_Hlt1TrackMuonDecision_TOS, &(l->b_B0_Hlt1TrackMuonDecision_TOS));
	tree->SetBranchAddress("B0_Hlt1TrackPhotonDecision_TOS", l->B0_Hlt1TrackPhotonDecision_TOS, &(l->b_B0_Hlt1TrackPhotonDecision_TOS));
	tree->SetBranchAddress("B0_Hlt2DiMuonDetachedDecision_TOS", l->B0_Hlt2DiMuonDetachedDecision_TOS, &(l->b_B0_Hlt2DiMuonDetachedDecision_TOS));
	tree->SetBranchAddress("B0_Hlt2DiMuonDetachedHeavyDecision_TOS", l->B0_Hlt2DiMuonDetachedHeavyDecision_TOS, &(l->b_B0_Hlt2DiMuonDetachedHeavyDecision_TOS));
	tree->SetBranchAddress("B0_Hlt2DiMuonDetachedJPsiDecision_TOS", l->B0_Hlt2DiMuonDetachedJPsiDecision_TOS, &(l->b_B0_Hlt2DiMuonDetachedJPsiDecision_TOS));
	tree->SetBranchAddress("B0_Hlt2Global_TIS", l->B0_Hlt2Global_TIS, &(l->b_B0_Hlt2Global_TIS));
	tree->SetBranchAddress("B0_Hlt2Global_TOS", l->B0_Hlt2Global_TOS, &(l->b_B0_Hlt2Global_TOS));
	tree->SetBranchAddress("B0_Hlt2RadiativeTopoPhotonDecision_TOS", l->B0_Hlt2RadiativeTopoPhotonDecision_TOS, &(l->b_B0_Hlt2RadiativeTopoPhotonDecision_TOS));
	tree->SetBranchAddress("B0_Hlt2SingleMuonDecision_TOS", l->B0_Hlt2SingleMuonDecision_TOS, &(l->b_B0_Hlt2SingleMuonDecision_TOS));
	tree->SetBranchAddress("B0_Hlt2Topo2BodyBBDTDecision_TOS", l->B0_Hlt2Topo2BodyBBDTDecision_TOS, &(l->b_B0_Hlt2Topo2BodyBBDTDecision_TOS));
	tree->SetBranchAddress("B0_Hlt2Topo3BodyBBDTDecision_TOS", l->B0_Hlt2Topo3BodyBBDTDecision_TOS, &(l->b_B0_Hlt2Topo3BodyBBDTDecision_TOS));
	tree->SetBranchAddress("B0_Hlt2Topo4BodyBBDTDecision_TOS", l->B0_Hlt2Topo4BodyBBDTDecision_TOS, &(l->b_B0_Hlt2Topo4BodyBBDTDecision_TOS));
	tree->SetBranchAddress("B0_Hlt2TopoE2BodyBBDTDecision_TOS", l->B0_Hlt2TopoE2BodyBBDTDecision_TOS, &(l->b_B0_Hlt2TopoE2BodyBBDTDecision_TOS));
	tree->SetBranchAddress("B0_Hlt2TopoE3BodyBBDTDecision_TOS", l->B0_Hlt2TopoE3BodyBBDTDecision_TOS, &(l->b_B0_Hlt2TopoE3BodyBBDTDecision_TOS));
	tree->SetBranchAddress("B0_Hlt2TopoE4BodyBBDTDecision_TOS", l->B0_Hlt2TopoE4BodyBBDTDecision_TOS, &(l->b_B0_Hlt2TopoE4BodyBBDTDecision_TOS));
	tree->SetBranchAddress("B0_Hlt2TopoMu2BodyBBDTDecision_TOS", l->B0_Hlt2TopoMu2BodyBBDTDecision_TOS, &(l->b_B0_Hlt2TopoMu2BodyBBDTDecision_TOS));
	tree->SetBranchAddress("B0_Hlt2TopoMu3BodyBBDTDecision_TOS", l->B0_Hlt2TopoMu3BodyBBDTDecision_TOS, &(l->b_B0_Hlt2TopoMu3BodyBBDTDecision_TOS));
	tree->SetBranchAddress("B0_ISOLATION_BDT1_highq2", l->B0_ISOLATION_BDT1_highq2, &(l->b_B0_ISOLATION_BDT1_highq2));
	tree->SetBranchAddress("B0_ISOLATION_BDT2_highq2", l->B0_ISOLATION_BDT2_highq2, &(l->b_B0_ISOLATION_BDT2_highq2));
	tree->SetBranchAddress("B0_ISOLATION_BDT3_highq2", l->B0_ISOLATION_BDT3_highq2, &(l->b_B0_ISOLATION_BDT3_highq2));
	tree->SetBranchAddress("B0_ISOLATION_BDT4_highq2", l->B0_ISOLATION_BDT4_highq2, &(l->b_B0_ISOLATION_BDT4_highq2));
	tree->SetBranchAddress("B0_L0DiMuonDecision_TOS", l->B0_L0DiMuonDecision_TOS, &(l->b_B0_L0DiMuonDecision_TOS));
	tree->SetBranchAddress("B0_L0ElectronDecision_TOS", l->B0_L0ElectronDecision_TOS, &(l->b_B0_L0ElectronDecision_TOS));
	tree->SetBranchAddress("B0_L0Global_TIS", l->B0_L0Global_TIS, &(l->b_B0_L0Global_TIS));
	tree->SetBranchAddress("B0_L0Global_TOS", l->B0_L0Global_TOS, &(l->b_B0_L0Global_TOS));
	tree->SetBranchAddress("B0_L0HadronDecision_TOS", l->B0_L0HadronDecision_TOS, &(l->b_B0_L0HadronDecision_TOS));
	tree->SetBranchAddress("B0_L0MuonDecision_TOS", l->B0_L0MuonDecision_TOS, &(l->b_B0_L0MuonDecision_TOS));
	tree->SetBranchAddress("B0_M", l->B0_M, &(l->b_B0_M));
	if (l->itype<0) tree->SetBranchAddress("B0_MC_GD_GD_MOTHER_ID", l->B0_MC_GD_GD_MOTHER_ID, &(l->b_B0_MC_GD_GD_MOTHER_ID));
	if (l->itype<0) tree->SetBranchAddress("B0_MC_GD_GD_MOTHER_KEY", l->B0_MC_GD_GD_MOTHER_KEY, &(l->b_B0_MC_GD_GD_MOTHER_KEY));
	if (l->itype<0) tree->SetBranchAddress("B0_MC_GD_MOTHER_ID", l->B0_MC_GD_MOTHER_ID, &(l->b_B0_MC_GD_MOTHER_ID));
	if (l->itype<0) tree->SetBranchAddress("B0_MC_GD_MOTHER_KEY", l->B0_MC_GD_MOTHER_KEY, &(l->b_B0_MC_GD_MOTHER_KEY));
	if (l->itype<0) tree->SetBranchAddress("B0_MC_MOTHER_ID", l->B0_MC_MOTHER_ID, &(l->b_B0_MC_MOTHER_ID));
	if (l->itype<0) tree->SetBranchAddress("B0_MC_MOTHER_KEY", l->B0_MC_MOTHER_KEY, &(l->b_B0_MC_MOTHER_KEY));
	tree->SetBranchAddress("B0_MINIP", l->B0_MINIP, &(l->b_B0_MINIP));
	tree->SetBranchAddress("B0_MINIPCHI2", l->B0_MINIPCHI2, &(l->b_B0_MINIPCHI2));
	tree->SetBranchAddress("B0_MM", l->B0_MM, &(l->b_B0_MM));
	tree->SetBranchAddress("B0_MMERR", l->B0_MMERR, &(l->b_B0_MMERR));
	tree->SetBranchAddress("B0_P", l->B0_P, &(l->b_B0_P));
	tree->SetBranchAddress("B0_PE", l->B0_PE, &(l->b_B0_PE));
	tree->SetBranchAddress("B0_PT", l->B0_PT, &(l->b_B0_PT));
	tree->SetBranchAddress("B0_PX", l->B0_PX, &(l->b_B0_PX));
	tree->SetBranchAddress("B0_PY", l->B0_PY, &(l->b_B0_PY));
	tree->SetBranchAddress("B0_PZ", l->B0_PZ, &(l->b_B0_PZ));
	tree->SetBranchAddress("B0_P_Parallel", l->B0_P_Parallel, &(l->b_B0_P_Parallel));
	tree->SetBranchAddress("B0_P_Perp", l->B0_P_Perp, &(l->b_B0_P_Perp));
	tree->SetBranchAddress("B0_TAU", l->B0_TAU, &(l->b_B0_TAU));
	if (l->itype<0) tree->SetBranchAddress("B0_TRUEENDVERTEX_X", l->B0_TRUEENDVERTEX_X, &(l->b_B0_TRUEENDVERTEX_X));
	if (l->itype<0) tree->SetBranchAddress("B0_TRUEENDVERTEX_Y", l->B0_TRUEENDVERTEX_Y, &(l->b_B0_TRUEENDVERTEX_Y));
	if (l->itype<0) tree->SetBranchAddress("B0_TRUEENDVERTEX_Z", l->B0_TRUEENDVERTEX_Z, &(l->b_B0_TRUEENDVERTEX_Z));
	if (l->itype<0) tree->SetBranchAddress("B0_TRUEID", l->B0_TRUEID, &(l->b_B0_TRUEID));
	if (l->itype<0) tree->SetBranchAddress("B0_TRUEISSTABLE", l->B0_TRUEISSTABLE, &(l->b_B0_TRUEISSTABLE));
	if (l->itype<0) tree->SetBranchAddress("B0_TRUEORIGINVERTEX_X", l->B0_TRUEORIGINVERTEX_X, &(l->b_B0_TRUEORIGINVERTEX_X));
	if (l->itype<0) tree->SetBranchAddress("B0_TRUEORIGINVERTEX_Y", l->B0_TRUEORIGINVERTEX_Y, &(l->b_B0_TRUEORIGINVERTEX_Y));
	if (l->itype<0) tree->SetBranchAddress("B0_TRUEORIGINVERTEX_Z", l->B0_TRUEORIGINVERTEX_Z, &(l->b_B0_TRUEORIGINVERTEX_Z));
	if (l->itype<0) tree->SetBranchAddress("B0_TRUEPT", l->B0_TRUEPT, &(l->b_B0_TRUEPT));
	if (l->itype<0) tree->SetBranchAddress("B0_TRUEP_E", l->B0_TRUEP_E, &(l->b_B0_TRUEP_E));
	if (l->itype<0) tree->SetBranchAddress("B0_TRUEP_X", l->B0_TRUEP_X, &(l->b_B0_TRUEP_X));
	if (l->itype<0) tree->SetBranchAddress("B0_TRUEP_Y", l->B0_TRUEP_Y, &(l->b_B0_TRUEP_Y));
	if (l->itype<0) tree->SetBranchAddress("B0_TRUEP_Z", l->B0_TRUEP_Z, &(l->b_B0_TRUEP_Z));
	if (l->itype<0) tree->SetBranchAddress("B0_TRUETAU", l->B0_TRUETAU, &(l->b_B0_TRUETAU));
	tree->SetBranchAddress("B0_X_travelled", l->B0_X_travelled, &(l->b_B0_X_travelled));
	tree->SetBranchAddress("B0_Y_travelled", l->B0_Y_travelled, &(l->b_B0_Y_travelled));
	tree->SetBranchAddress("B0_Z_travelled", l->B0_Z_travelled, &(l->b_B0_Z_travelled));
	if (l->itype<0) tree->SetBranchAddress("Jpsi_BKGCAT", l->Jpsi_BKGCAT, &(l->b_Jpsi_BKGCAT));
	tree->SetBranchAddress("Jpsi_CosTheta", l->Jpsi_CosTheta, &(l->b_Jpsi_CosTheta));
	tree->SetBranchAddress("Jpsi_ENDVERTEX_CHI2", l->Jpsi_ENDVERTEX_CHI2, &(l->b_Jpsi_ENDVERTEX_CHI2));
	tree->SetBranchAddress("Jpsi_M", l->Jpsi_M, &(l->b_Jpsi_M));
	tree->SetBranchAddress("Jpsi_MINIP", l->Jpsi_MINIP, &(l->b_Jpsi_MINIP));
	tree->SetBranchAddress("Jpsi_MINIPCHI2", l->Jpsi_MINIPCHI2, &(l->b_Jpsi_MINIPCHI2));
	tree->SetBranchAddress("Jpsi_MM", l->Jpsi_MM, &(l->b_Jpsi_MM));
	tree->SetBranchAddress("Jpsi_MMERR", l->Jpsi_MMERR, &(l->b_Jpsi_MMERR));
	tree->SetBranchAddress("Jpsi_P", l->Jpsi_P, &(l->b_Jpsi_P));
	tree->SetBranchAddress("Jpsi_PE", l->Jpsi_PE, &(l->b_Jpsi_PE));
	tree->SetBranchAddress("Jpsi_PT", l->Jpsi_PT, &(l->b_Jpsi_PT));
	tree->SetBranchAddress("Jpsi_PX", l->Jpsi_PX, &(l->b_Jpsi_PX));
	tree->SetBranchAddress("Jpsi_PY", l->Jpsi_PY, &(l->b_Jpsi_PY));
	tree->SetBranchAddress("Jpsi_PZ", l->Jpsi_PZ, &(l->b_Jpsi_PZ));
	tree->SetBranchAddress("Kplus_P", l->Kplus_P, &(l->b_Kplus_P));
	tree->SetBranchAddress("Kplus_PE", l->Kplus_PE, &(l->b_Kplus_PE));
	tree->SetBranchAddress("Kplus_PIDK", l->Kplus_PIDK, &(l->b_Kplus_PIDK));
	tree->SetBranchAddress("Kplus_PX", l->Kplus_PX, &(l->b_Kplus_PX));
	tree->SetBranchAddress("Kplus_PY", l->Kplus_PY, &(l->b_Kplus_PY));
	tree->SetBranchAddress("Kplus_PZ", l->Kplus_PZ, &(l->b_Kplus_PZ));
	tree->SetBranchAddress("Polarity", l->Polarity, &(l->b_Polarity));
	tree->SetBranchAddress("eminus_CosTheta", l->eminus_CosTheta, &(l->b_eminus_CosTheta));
	tree->SetBranchAddress("eminus_M", l->eminus_M, &(l->b_eminus_M));
	tree->SetBranchAddress("eminus_MINIP", l->eminus_MINIP, &(l->b_eminus_MINIP));
	tree->SetBranchAddress("eminus_MINIPCHI2", l->eminus_MINIPCHI2, &(l->b_eminus_MINIPCHI2));
	tree->SetBranchAddress("eminus_P", l->eminus_P, &(l->b_eminus_P));
	tree->SetBranchAddress("eminus_PE", l->eminus_PE, &(l->b_eminus_PE));
	tree->SetBranchAddress("eminus_PT", l->eminus_PT, &(l->b_eminus_PT));
	tree->SetBranchAddress("eminus_PX", l->eminus_PX, &(l->b_eminus_PX));
	tree->SetBranchAddress("eminus_PY", l->eminus_PY, &(l->b_eminus_PY));
	tree->SetBranchAddress("eminus_PZ", l->eminus_PZ, &(l->b_eminus_PZ));
	tree->SetBranchAddress("eminus_TRACK_Type", l->eminus_TRACK_Type, &(l->b_eminus_TRACK_Type));
	tree->SetBranchAddress("eplus_CosTheta", l->eplus_CosTheta, &(l->b_eplus_CosTheta));
	tree->SetBranchAddress("eplus_M", l->eplus_M, &(l->b_eplus_M));
	tree->SetBranchAddress("eplus_MINIP", l->eplus_MINIP, &(l->b_eplus_MINIP));
	tree->SetBranchAddress("eplus_MINIPCHI2", l->eplus_MINIPCHI2, &(l->b_eplus_MINIPCHI2));
	tree->SetBranchAddress("eplus_P", l->eplus_P, &(l->b_eplus_P));
	tree->SetBranchAddress("eplus_PE", l->eplus_PE, &(l->b_eplus_PE));
	tree->SetBranchAddress("eplus_PT", l->eplus_PT, &(l->b_eplus_PT));
	tree->SetBranchAddress("eplus_PX", l->eplus_PX, &(l->b_eplus_PX));
	tree->SetBranchAddress("eplus_PY", l->eplus_PY, &(l->b_eplus_PY));
	tree->SetBranchAddress("eplus_PZ", l->eplus_PZ, &(l->b_eplus_PZ));
	tree->SetBranchAddress("eplus_TRACK_Type", l->eplus_TRACK_Type, &(l->b_eplus_TRACK_Type));
	tree->SetBranchAddress("eventNumber", l->eventNumber, &(l->b_eventNumber));
	if (l->itype<0) tree->SetBranchAddress("gamgams_BKGCAT", l->gamgams_BKGCAT, &(l->b_gamgams_BKGCAT));
	tree->SetBranchAddress("gamgams_CosTheta", l->gamgams_CosTheta, &(l->b_gamgams_CosTheta));
	tree->SetBranchAddress("gamgams_DIRA_OWNPV", l->gamgams_DIRA_OWNPV, &(l->b_gamgams_DIRA_OWNPV));
	tree->SetBranchAddress("gamgams_ENDVERTEX_CHI2", l->gamgams_ENDVERTEX_CHI2, &(l->b_gamgams_ENDVERTEX_CHI2));
	tree->SetBranchAddress("gamgams_FD_CHI2", l->gamgams_FD_CHI2, &(l->b_gamgams_FD_CHI2));
	tree->SetBranchAddress("gamgams_M", l->gamgams_M, &(l->b_gamgams_M));
	if (l->itype<0) tree->SetBranchAddress("gamgams_MC_GD_GD_MOTHER_ID", l->gamgams_MC_GD_GD_MOTHER_ID, &(l->b_gamgams_MC_GD_GD_MOTHER_ID));
	if (l->itype<0) tree->SetBranchAddress("gamgams_MC_GD_GD_MOTHER_KEY", l->gamgams_MC_GD_GD_MOTHER_KEY, &(l->b_gamgams_MC_GD_GD_MOTHER_KEY));
	if (l->itype<0) tree->SetBranchAddress("gamgams_MC_GD_MOTHER_ID", l->gamgams_MC_GD_MOTHER_ID, &(l->b_gamgams_MC_GD_MOTHER_ID));
	if (l->itype<0) tree->SetBranchAddress("gamgams_MC_GD_MOTHER_KEY", l->gamgams_MC_GD_MOTHER_KEY, &(l->b_gamgams_MC_GD_MOTHER_KEY));
	if (l->itype<0) tree->SetBranchAddress("gamgams_MC_MOTHER_ID", l->gamgams_MC_MOTHER_ID, &(l->b_gamgams_MC_MOTHER_ID));
	if (l->itype<0) tree->SetBranchAddress("gamgams_MC_MOTHER_KEY", l->gamgams_MC_MOTHER_KEY, &(l->b_gamgams_MC_MOTHER_KEY));
	tree->SetBranchAddress("gamgams_MINIP", l->gamgams_MINIP, &(l->b_gamgams_MINIP));
	tree->SetBranchAddress("gamgams_MINIPCHI2", l->gamgams_MINIPCHI2, &(l->b_gamgams_MINIPCHI2));
	tree->SetBranchAddress("gamgams_MM", l->gamgams_MM, &(l->b_gamgams_MM));
	tree->SetBranchAddress("gamgams_MMERR", l->gamgams_MMERR, &(l->b_gamgams_MMERR));
	tree->SetBranchAddress("gamgams_P", l->gamgams_P, &(l->b_gamgams_P));
	tree->SetBranchAddress("gamgams_PE", l->gamgams_PE, &(l->b_gamgams_PE));
	tree->SetBranchAddress("gamgams_PT", l->gamgams_PT, &(l->b_gamgams_PT));
	tree->SetBranchAddress("gamgams_PX", l->gamgams_PX, &(l->b_gamgams_PX));
	tree->SetBranchAddress("gamgams_PY", l->gamgams_PY, &(l->b_gamgams_PY));
	tree->SetBranchAddress("gamgams_PZ", l->gamgams_PZ, &(l->b_gamgams_PZ));
	tree->SetBranchAddress("gamgams_TAU", l->gamgams_TAU, &(l->b_gamgams_TAU));
	tree->SetBranchAddress("gamgams_X", l->gamgams_X, &(l->b_gamgams_X));
	tree->SetBranchAddress("gamgams_Y", l->gamgams_Y, &(l->b_gamgams_Y));
	tree->SetBranchAddress("gamgams_Z", l->gamgams_Z, &(l->b_gamgams_Z));
	tree->SetBranchAddress("muminus_CosTheta", l->muminus_CosTheta, &(l->b_muminus_CosTheta));
	tree->SetBranchAddress("muminus_M", l->muminus_M, &(l->b_muminus_M));
	tree->SetBranchAddress("muminus_MINIP", l->muminus_MINIP, &(l->b_muminus_MINIP));
	tree->SetBranchAddress("muminus_MINIPCHI2", l->muminus_MINIPCHI2, &(l->b_muminus_MINIPCHI2));
	tree->SetBranchAddress("muminus_P", l->muminus_P, &(l->b_muminus_P));
	tree->SetBranchAddress("muminus_PE", l->muminus_PE, &(l->b_muminus_PE));
	tree->SetBranchAddress("muminus_PT", l->muminus_PT, &(l->b_muminus_PT));
	tree->SetBranchAddress("muminus_PX", l->muminus_PX, &(l->b_muminus_PX));
	tree->SetBranchAddress("muminus_PY", l->muminus_PY, &(l->b_muminus_PY));
	tree->SetBranchAddress("muminus_PZ", l->muminus_PZ, &(l->b_muminus_PZ));
	tree->SetBranchAddress("muplus_CosTheta", l->muplus_CosTheta, &(l->b_muplus_CosTheta));
	tree->SetBranchAddress("muplus_M", l->muplus_M, &(l->b_muplus_M));
	tree->SetBranchAddress("muplus_MINIP", l->muplus_MINIP, &(l->b_muplus_MINIP));
	tree->SetBranchAddress("muplus_MINIPCHI2", l->muplus_MINIPCHI2, &(l->b_muplus_MINIPCHI2));
	tree->SetBranchAddress("muplus_P", l->muplus_P, &(l->b_muplus_P));
	tree->SetBranchAddress("muplus_PE", l->muplus_PE, &(l->b_muplus_PE));
	tree->SetBranchAddress("muplus_PT", l->muplus_PT, &(l->b_muplus_PT));
	tree->SetBranchAddress("muplus_PX", l->muplus_PX, &(l->b_muplus_PX));
	tree->SetBranchAddress("muplus_PY", l->muplus_PY, &(l->b_muplus_PY));
	tree->SetBranchAddress("muplus_PZ", l->muplus_PZ, &(l->b_muplus_PZ));
	tree->SetBranchAddress("nBackTracks", l->nBackTracks, &(l->b_nBackTracks));
	tree->SetBranchAddress("nCandidate", l->nCandidate, &(l->b_nCandidate));
	tree->SetBranchAddress("nMuonCoordsS0", l->nMuonCoordsS0, &(l->b_nMuonCoordsS0));
	tree->SetBranchAddress("nMuonCoordsS1", l->nMuonCoordsS1, &(l->b_nMuonCoordsS1));
	tree->SetBranchAddress("nMuonCoordsS2", l->nMuonCoordsS2, &(l->b_nMuonCoordsS2));
	tree->SetBranchAddress("nMuonCoordsS3", l->nMuonCoordsS3, &(l->b_nMuonCoordsS3));
	tree->SetBranchAddress("nMuonCoordsS4", l->nMuonCoordsS4, &(l->b_nMuonCoordsS4));
	tree->SetBranchAddress("nMuonTracks", l->nMuonTracks, &(l->b_nMuonTracks));
	tree->SetBranchAddress("nPVs", l->nPVs, &(l->b_nPVs));
	tree->SetBranchAddress("piminus_P", l->piminus_P, &(l->b_piminus_P));
	tree->SetBranchAddress("piminus_PE", l->piminus_PE, &(l->b_piminus_PE));
	tree->SetBranchAddress("piminus_PIDK", l->piminus_PIDK, &(l->b_piminus_PIDK));
	tree->SetBranchAddress("piminus_PX", l->piminus_PX, &(l->b_piminus_PX));
	tree->SetBranchAddress("piminus_PY", l->piminus_PY, &(l->b_piminus_PY));
	tree->SetBranchAddress("piminus_PZ", l->piminus_PZ, &(l->b_piminus_PZ));
	tree->SetBranchAddress("runNumber", l->runNumber, &(l->b_runNumber));
	tree->SetBranchAddress("totCandidates", l->totCandidates, &(l->b_totCandidates));

}

void AnalysisBranches::initialiseVariables(Looper *l) {
	l->B0_BKGCAT                             = new Int_t(0);
	l->B0_BPVVDZ                             = new Double_t(0);
	l->B0_Corrected_Mass                     = new Double_t(0);
	l->B0_DIRA_OWNPV                         = new Double_t(0);
	l->B0_ENDVERTEX_CHI2                     = new Double_t(0);
	l->B0_FD_CHI2                            = new Double_t(0);
	l->B0_Hlt1DiMuonHighMassDecision_TOS     = new Bool_t(0);
	l->B0_Hlt1Global_TIS                     = new Bool_t(0);
	l->B0_Hlt1Global_TOS                     = new Bool_t(0);
	l->B0_Hlt1Phys_TOS                       = new Bool_t(0);
	l->B0_Hlt1SingleMuonHighPTDecision_TOS   = new Bool_t(0);
	l->B0_Hlt1TrackAllL0Decision_TOS         = new Bool_t(0);
	l->B0_Hlt1TrackMuonDecision_TOS          = new Bool_t(0);
	l->B0_Hlt1TrackPhotonDecision_TOS        = new Bool_t(0);
	l->B0_Hlt2DiMuonDetachedDecision_TOS     = new Bool_t(0);
	l->B0_Hlt2DiMuonDetachedHeavyDecision_TOS = new Bool_t(0);
	l->B0_Hlt2DiMuonDetachedJPsiDecision_TOS = new Bool_t(0);
	l->B0_Hlt2Global_TIS                     = new Bool_t(0);
	l->B0_Hlt2Global_TOS                     = new Bool_t(0);
	l->B0_Hlt2RadiativeTopoPhotonDecision_TOS = new Bool_t(0);
	l->B0_Hlt2SingleMuonDecision_TOS         = new Bool_t(0);
	l->B0_Hlt2Topo2BodyBBDTDecision_TOS      = new Bool_t(0);
	l->B0_Hlt2Topo3BodyBBDTDecision_TOS      = new Bool_t(0);
	l->B0_Hlt2Topo4BodyBBDTDecision_TOS      = new Bool_t(0);
	l->B0_Hlt2TopoE2BodyBBDTDecision_TOS     = new Bool_t(0);
	l->B0_Hlt2TopoE3BodyBBDTDecision_TOS     = new Bool_t(0);
	l->B0_Hlt2TopoE4BodyBBDTDecision_TOS     = new Bool_t(0);
	l->B0_Hlt2TopoMu2BodyBBDTDecision_TOS    = new Bool_t(0);
	l->B0_Hlt2TopoMu3BodyBBDTDecision_TOS    = new Bool_t(0);
	l->B0_ISOLATION_BDT1_highq2              = new Double_t(0);
	l->B0_ISOLATION_BDT2_highq2              = new Double_t(0);
	l->B0_ISOLATION_BDT3_highq2              = new Double_t(0);
	l->B0_ISOLATION_BDT4_highq2              = new Double_t(0);
	l->B0_L0DiMuonDecision_TOS               = new Bool_t(0);
	l->B0_L0ElectronDecision_TOS             = new Bool_t(0);
	l->B0_L0Global_TIS                       = new Bool_t(0);
	l->B0_L0Global_TOS                       = new Bool_t(0);
	l->B0_L0HadronDecision_TOS               = new Bool_t(0);
	l->B0_L0MuonDecision_TOS                 = new Bool_t(0);
	l->B0_M                                  = new Double_t(0);
	l->B0_MC_GD_GD_MOTHER_ID                 = new Int_t(0);
	l->B0_MC_GD_GD_MOTHER_KEY                = new Int_t(0);
	l->B0_MC_GD_MOTHER_ID                    = new Int_t(0);
	l->B0_MC_GD_MOTHER_KEY                   = new Int_t(0);
	l->B0_MC_MOTHER_ID                       = new Int_t(0);
	l->B0_MC_MOTHER_KEY                      = new Int_t(0);
	l->B0_MINIP                              = new Double_t(0);
	l->B0_MINIPCHI2                          = new Double_t(0);
	l->B0_MM                                 = new Double_t(0);
	l->B0_MMERR                              = new Double_t(0);
	l->B0_P                                  = new Double_t(0);
	l->B0_PE                                 = new Double_t(0);
	l->B0_PT                                 = new Double_t(0);
	l->B0_PX                                 = new Double_t(0);
	l->B0_PY                                 = new Double_t(0);
	l->B0_PZ                                 = new Double_t(0);
	l->B0_P_Parallel                         = new Double_t(0);
	l->B0_P_Perp                             = new Double_t(0);
	l->B0_TAU                                = new Double_t(0);
	l->B0_TRUEENDVERTEX_X                    = new Double_t(0);
	l->B0_TRUEENDVERTEX_Y                    = new Double_t(0);
	l->B0_TRUEENDVERTEX_Z                    = new Double_t(0);
	l->B0_TRUEID                             = new Int_t(0);
	l->B0_TRUEISSTABLE                       = new Bool_t(0);
	l->B0_TRUEORIGINVERTEX_X                 = new Double_t(0);
	l->B0_TRUEORIGINVERTEX_Y                 = new Double_t(0);
	l->B0_TRUEORIGINVERTEX_Z                 = new Double_t(0);
	l->B0_TRUEPT                             = new Double_t(0);
	l->B0_TRUEP_E                            = new Double_t(0);
	l->B0_TRUEP_X                            = new Double_t(0);
	l->B0_TRUEP_Y                            = new Double_t(0);
	l->B0_TRUEP_Z                            = new Double_t(0);
	l->B0_TRUETAU                            = new Double_t(0);
	l->B0_X_travelled                        = new Double_t(0);
	l->B0_Y_travelled                        = new Double_t(0);
	l->B0_Z_travelled                        = new Double_t(0);
	l->Jpsi_BKGCAT                           = new Int_t(0);
	l->Jpsi_CosTheta                         = new Double_t(0);
	l->Jpsi_ENDVERTEX_CHI2                   = new Double_t(0);
	l->Jpsi_M                                = new Double_t(0);
	l->Jpsi_MINIP                            = new Double_t(0);
	l->Jpsi_MINIPCHI2                        = new Double_t(0);
	l->Jpsi_MM                               = new Double_t(0);
	l->Jpsi_MMERR                            = new Double_t(0);
	l->Jpsi_P                                = new Double_t(0);
	l->Jpsi_PE                               = new Double_t(0);
	l->Jpsi_PT                               = new Double_t(0);
	l->Jpsi_PX                               = new Double_t(0);
	l->Jpsi_PY                               = new Double_t(0);
	l->Jpsi_PZ                               = new Double_t(0);
	l->Kplus_P                               = new Double_t(0);
	l->Kplus_PE                              = new Double_t(0);
	l->Kplus_PIDK                            = new Double_t(0);
	l->Kplus_PX                              = new Double_t(0);
	l->Kplus_PY                              = new Double_t(0);
	l->Kplus_PZ                              = new Double_t(0);
	l->Polarity                              = new Short_t(0);
	l->bdtoutput                             = new Float_t(0);
	l->eminus_CosTheta                       = new Double_t(0);
	l->eminus_M                              = new Double_t(0);
	l->eminus_MINIP                          = new Double_t(0);
	l->eminus_MINIPCHI2                      = new Double_t(0);
	l->eminus_P                              = new Double_t(0);
	l->eminus_PE                             = new Double_t(0);
	l->eminus_PT                             = new Double_t(0);
	l->eminus_PX                             = new Double_t(0);
	l->eminus_PY                             = new Double_t(0);
	l->eminus_PZ                             = new Double_t(0);
	l->eminus_TRACK_Type                     = new Int_t(0);
	l->eplus_CosTheta                        = new Double_t(0);
	l->eplus_M                               = new Double_t(0);
	l->eplus_MINIP                           = new Double_t(0);
	l->eplus_MINIPCHI2                       = new Double_t(0);
	l->eplus_P                               = new Double_t(0);
	l->eplus_PE                              = new Double_t(0);
	l->eplus_PT                              = new Double_t(0);
	l->eplus_PX                              = new Double_t(0);
	l->eplus_PY                              = new Double_t(0);
	l->eplus_PZ                              = new Double_t(0);
	l->eplus_TRACK_Type                      = new Int_t(0);
	l->eventNumber                           = new ULong64_t(0);
	l->gamgams_BKGCAT                        = new Int_t(0);
	l->gamgams_CosTheta                      = new Double_t(0);
	l->gamgams_DIRA_OWNPV                    = new Double_t(0);
	l->gamgams_ENDVERTEX_CHI2                = new Double_t(0);
	l->gamgams_FD_CHI2                       = new Double_t(0);
	l->gamgams_M                             = new Double_t(0);
	l->gamgams_MC_GD_GD_MOTHER_ID            = new Int_t(0);
	l->gamgams_MC_GD_GD_MOTHER_KEY           = new Int_t(0);
	l->gamgams_MC_GD_MOTHER_ID               = new Int_t(0);
	l->gamgams_MC_GD_MOTHER_KEY              = new Int_t(0);
	l->gamgams_MC_MOTHER_ID                  = new Int_t(0);
	l->gamgams_MC_MOTHER_KEY                 = new Int_t(0);
	l->gamgams_MINIP                         = new Double_t(0);
	l->gamgams_MINIPCHI2                     = new Double_t(0);
	l->gamgams_MM                            = new Double_t(0);
	l->gamgams_MMERR                         = new Double_t(0);
	l->gamgams_P                             = new Double_t(0);
	l->gamgams_PE                            = new Double_t(0);
	l->gamgams_PT                            = new Double_t(0);
	l->gamgams_PX                            = new Double_t(0);
	l->gamgams_PY                            = new Double_t(0);
	l->gamgams_PZ                            = new Double_t(0);
	l->gamgams_TAU                           = new Double_t(0);
	l->gamgams_X                             = new Double_t(0);
	l->gamgams_Y                             = new Double_t(0);
	l->gamgams_Z                             = new Double_t(0);
	l->muminus_CosTheta                      = new Double_t(0);
	l->muminus_M                             = new Double_t(0);
	l->muminus_MINIP                         = new Double_t(0);
	l->muminus_MINIPCHI2                     = new Double_t(0);
	l->muminus_P                             = new Double_t(0);
	l->muminus_PE                            = new Double_t(0);
	l->muminus_PT                            = new Double_t(0);
	l->muminus_PX                            = new Double_t(0);
	l->muminus_PY                            = new Double_t(0);
	l->muminus_PZ                            = new Double_t(0);
	l->muplus_CosTheta                       = new Double_t(0);
	l->muplus_M                              = new Double_t(0);
	l->muplus_MINIP                          = new Double_t(0);
	l->muplus_MINIPCHI2                      = new Double_t(0);
	l->muplus_P                              = new Double_t(0);
	l->muplus_PE                             = new Double_t(0);
	l->muplus_PT                             = new Double_t(0);
	l->muplus_PX                             = new Double_t(0);
	l->muplus_PY                             = new Double_t(0);
	l->muplus_PZ                             = new Double_t(0);
	l->nBackTracks                           = new Int_t(0);
	l->nCandidate                            = new UInt_t(0);
	l->nMuonCoordsS0                         = new Int_t(0);
	l->nMuonCoordsS1                         = new Int_t(0);
	l->nMuonCoordsS2                         = new Int_t(0);
	l->nMuonCoordsS3                         = new Int_t(0);
	l->nMuonCoordsS4                         = new Int_t(0);
	l->nMuonTracks                           = new Int_t(0);
	l->nPVs                                  = new Int_t(0);
	l->phi_mass                              = new Double_t(0);
	l->piminus_P                             = new Double_t(0);
	l->piminus_PE                            = new Double_t(0);
	l->piminus_PIDK                          = new Double_t(0);
	l->piminus_PX                            = new Double_t(0);
	l->piminus_PY                            = new Double_t(0);
	l->piminus_PZ                            = new Double_t(0);
	l->runNumber                             = new UInt_t(0);
	l->totCandidates                         = new ULong64_t(0);

}

void AnalysisBranches::cleanVariables(Looper *l) {
	delete l->B0_BKGCAT;
	delete l->B0_BPVVDZ;
	delete l->B0_Corrected_Mass;
	delete l->B0_DIRA_OWNPV;
	delete l->B0_ENDVERTEX_CHI2;
	delete l->B0_FD_CHI2;
	delete l->B0_Hlt1DiMuonHighMassDecision_TOS;
	delete l->B0_Hlt1Global_TIS;
	delete l->B0_Hlt1Global_TOS;
	delete l->B0_Hlt1Phys_TOS;
	delete l->B0_Hlt1SingleMuonHighPTDecision_TOS;
	delete l->B0_Hlt1TrackAllL0Decision_TOS;
	delete l->B0_Hlt1TrackMuonDecision_TOS;
	delete l->B0_Hlt1TrackPhotonDecision_TOS;
	delete l->B0_Hlt2DiMuonDetachedDecision_TOS;
	delete l->B0_Hlt2DiMuonDetachedHeavyDecision_TOS;
	delete l->B0_Hlt2DiMuonDetachedJPsiDecision_TOS;
	delete l->B0_Hlt2Global_TIS;
	delete l->B0_Hlt2Global_TOS;
	delete l->B0_Hlt2RadiativeTopoPhotonDecision_TOS;
	delete l->B0_Hlt2SingleMuonDecision_TOS;
	delete l->B0_Hlt2Topo2BodyBBDTDecision_TOS;
	delete l->B0_Hlt2Topo3BodyBBDTDecision_TOS;
	delete l->B0_Hlt2Topo4BodyBBDTDecision_TOS;
	delete l->B0_Hlt2TopoE2BodyBBDTDecision_TOS;
	delete l->B0_Hlt2TopoE3BodyBBDTDecision_TOS;
	delete l->B0_Hlt2TopoE4BodyBBDTDecision_TOS;
	delete l->B0_Hlt2TopoMu2BodyBBDTDecision_TOS;
	delete l->B0_Hlt2TopoMu3BodyBBDTDecision_TOS;
	delete l->B0_ISOLATION_BDT1_highq2;
	delete l->B0_ISOLATION_BDT2_highq2;
	delete l->B0_ISOLATION_BDT3_highq2;
	delete l->B0_ISOLATION_BDT4_highq2;
	delete l->B0_L0DiMuonDecision_TOS;
	delete l->B0_L0ElectronDecision_TOS;
	delete l->B0_L0Global_TIS;
	delete l->B0_L0Global_TOS;
	delete l->B0_L0HadronDecision_TOS;
	delete l->B0_L0MuonDecision_TOS;
	delete l->B0_M;
	delete l->B0_MC_GD_GD_MOTHER_ID;
	delete l->B0_MC_GD_GD_MOTHER_KEY;
	delete l->B0_MC_GD_MOTHER_ID;
	delete l->B0_MC_GD_MOTHER_KEY;
	delete l->B0_MC_MOTHER_ID;
	delete l->B0_MC_MOTHER_KEY;
	delete l->B0_MINIP;
	delete l->B0_MINIPCHI2;
	delete l->B0_MM;
	delete l->B0_MMERR;
	delete l->B0_P;
	delete l->B0_PE;
	delete l->B0_PT;
	delete l->B0_PX;
	delete l->B0_PY;
	delete l->B0_PZ;
	delete l->B0_P_Parallel;
	delete l->B0_P_Perp;
	delete l->B0_TAU;
	delete l->B0_TRUEENDVERTEX_X;
	delete l->B0_TRUEENDVERTEX_Y;
	delete l->B0_TRUEENDVERTEX_Z;
	delete l->B0_TRUEID;
	delete l->B0_TRUEISSTABLE;
	delete l->B0_TRUEORIGINVERTEX_X;
	delete l->B0_TRUEORIGINVERTEX_Y;
	delete l->B0_TRUEORIGINVERTEX_Z;
	delete l->B0_TRUEPT;
	delete l->B0_TRUEP_E;
	delete l->B0_TRUEP_X;
	delete l->B0_TRUEP_Y;
	delete l->B0_TRUEP_Z;
	delete l->B0_TRUETAU;
	delete l->B0_X_travelled;
	delete l->B0_Y_travelled;
	delete l->B0_Z_travelled;
	delete l->Jpsi_BKGCAT;
	delete l->Jpsi_CosTheta;
	delete l->Jpsi_ENDVERTEX_CHI2;
	delete l->Jpsi_M;
	delete l->Jpsi_MINIP;
	delete l->Jpsi_MINIPCHI2;
	delete l->Jpsi_MM;
	delete l->Jpsi_MMERR;
	delete l->Jpsi_P;
	delete l->Jpsi_PE;
	delete l->Jpsi_PT;
	delete l->Jpsi_PX;
	delete l->Jpsi_PY;
	delete l->Jpsi_PZ;
	delete l->Kplus_P;
	delete l->Kplus_PE;
	delete l->Kplus_PIDK;
	delete l->Kplus_PX;
	delete l->Kplus_PY;
	delete l->Kplus_PZ;
	delete l->Polarity;
	delete l->bdtoutput;
	delete l->eminus_CosTheta;
	delete l->eminus_M;
	delete l->eminus_MINIP;
	delete l->eminus_MINIPCHI2;
	delete l->eminus_P;
	delete l->eminus_PE;
	delete l->eminus_PT;
	delete l->eminus_PX;
	delete l->eminus_PY;
	delete l->eminus_PZ;
	delete l->eminus_TRACK_Type;
	delete l->eplus_CosTheta;
	delete l->eplus_M;
	delete l->eplus_MINIP;
	delete l->eplus_MINIPCHI2;
	delete l->eplus_P;
	delete l->eplus_PE;
	delete l->eplus_PT;
	delete l->eplus_PX;
	delete l->eplus_PY;
	delete l->eplus_PZ;
	delete l->eplus_TRACK_Type;
	delete l->eventNumber;
	delete l->gamgams_BKGCAT;
	delete l->gamgams_CosTheta;
	delete l->gamgams_DIRA_OWNPV;
	delete l->gamgams_ENDVERTEX_CHI2;
	delete l->gamgams_FD_CHI2;
	delete l->gamgams_M;
	delete l->gamgams_MC_GD_GD_MOTHER_ID;
	delete l->gamgams_MC_GD_GD_MOTHER_KEY;
	delete l->gamgams_MC_GD_MOTHER_ID;
	delete l->gamgams_MC_GD_MOTHER_KEY;
	delete l->gamgams_MC_MOTHER_ID;
	delete l->gamgams_MC_MOTHER_KEY;
	delete l->gamgams_MINIP;
	delete l->gamgams_MINIPCHI2;
	delete l->gamgams_MM;
	delete l->gamgams_MMERR;
	delete l->gamgams_P;
	delete l->gamgams_PE;
	delete l->gamgams_PT;
	delete l->gamgams_PX;
	delete l->gamgams_PY;
	delete l->gamgams_PZ;
	delete l->gamgams_TAU;
	delete l->gamgams_X;
	delete l->gamgams_Y;
	delete l->gamgams_Z;
	delete l->muminus_CosTheta;
	delete l->muminus_M;
	delete l->muminus_MINIP;
	delete l->muminus_MINIPCHI2;
	delete l->muminus_P;
	delete l->muminus_PE;
	delete l->muminus_PT;
	delete l->muminus_PX;
	delete l->muminus_PY;
	delete l->muminus_PZ;
	delete l->muplus_CosTheta;
	delete l->muplus_M;
	delete l->muplus_MINIP;
	delete l->muplus_MINIPCHI2;
	delete l->muplus_P;
	delete l->muplus_PE;
	delete l->muplus_PT;
	delete l->muplus_PX;
	delete l->muplus_PY;
	delete l->muplus_PZ;
	delete l->nBackTracks;
	delete l->nCandidate;
	delete l->nMuonCoordsS0;
	delete l->nMuonCoordsS1;
	delete l->nMuonCoordsS2;
	delete l->nMuonCoordsS3;
	delete l->nMuonCoordsS4;
	delete l->nMuonTracks;
	delete l->nPVs;
	delete l->phi_mass;
	delete l->piminus_P;
	delete l->piminus_PE;
	delete l->piminus_PIDK;
	delete l->piminus_PX;
	delete l->piminus_PY;
	delete l->piminus_PZ;
	delete l->runNumber;
	delete l->totCandidates;
}

void AnalysisBranches::setOutputBranches(Looper *l, TTree *tree){ 
	tree->Branch("itype",&(l->itype));
	tree->Branch("sqrts",&(l->sqrts));
	tree->Branch("B0_BKGCAT",l->B0_BKGCAT);
	tree->Branch("B0_BPVVDZ",l->B0_BPVVDZ);
	tree->Branch("B0_Corrected_Mass",l->B0_Corrected_Mass);
	tree->Branch("B0_DIRA_OWNPV",l->B0_DIRA_OWNPV);
	tree->Branch("B0_ENDVERTEX_CHI2",l->B0_ENDVERTEX_CHI2);
	tree->Branch("B0_FD_CHI2",l->B0_FD_CHI2);
	tree->Branch("B0_ISOLATION_BDT1_highq2",l->B0_ISOLATION_BDT1_highq2);
	tree->Branch("B0_ISOLATION_BDT2_highq2",l->B0_ISOLATION_BDT2_highq2);
	tree->Branch("B0_ISOLATION_BDT3_highq2",l->B0_ISOLATION_BDT3_highq2);
	tree->Branch("B0_ISOLATION_BDT4_highq2",l->B0_ISOLATION_BDT4_highq2);
	tree->Branch("B0_M",l->B0_M);
	tree->Branch("B0_MINIP",l->B0_MINIP);
	tree->Branch("B0_MINIPCHI2",l->B0_MINIPCHI2);
	tree->Branch("B0_MM",l->B0_MM);
	tree->Branch("B0_MMERR",l->B0_MMERR);
	tree->Branch("B0_P",l->B0_P);
	tree->Branch("B0_PE",l->B0_PE);
	tree->Branch("B0_PT",l->B0_PT);
	tree->Branch("B0_PX",l->B0_PX);
	tree->Branch("B0_PY",l->B0_PY);
	tree->Branch("B0_PZ",l->B0_PZ);
	tree->Branch("B0_P_Parallel",l->B0_P_Parallel);
	tree->Branch("B0_P_Perp",l->B0_P_Perp);
	tree->Branch("B0_TAU",l->B0_TAU);
	tree->Branch("B0_X_travelled",l->B0_X_travelled);
	tree->Branch("B0_Y_travelled",l->B0_Y_travelled);
	tree->Branch("B0_Z_travelled",l->B0_Z_travelled);
	tree->Branch("Jpsi_BKGCAT",l->Jpsi_BKGCAT);
	tree->Branch("Jpsi_CosTheta",l->Jpsi_CosTheta);
	tree->Branch("Jpsi_ENDVERTEX_CHI2",l->Jpsi_ENDVERTEX_CHI2);
	tree->Branch("Jpsi_M",l->Jpsi_M);
	tree->Branch("Jpsi_MINIP",l->Jpsi_MINIP);
	tree->Branch("Jpsi_MINIPCHI2",l->Jpsi_MINIPCHI2);
	tree->Branch("Jpsi_MM",l->Jpsi_MM);
	tree->Branch("Jpsi_MMERR",l->Jpsi_MMERR);
	tree->Branch("Jpsi_P",l->Jpsi_P);
	tree->Branch("Jpsi_PE",l->Jpsi_PE);
	tree->Branch("Jpsi_PT",l->Jpsi_PT);
	tree->Branch("Jpsi_PX",l->Jpsi_PX);
	tree->Branch("Jpsi_PY",l->Jpsi_PY);
	tree->Branch("Jpsi_PZ",l->Jpsi_PZ);
	tree->Branch("Kplus_PIDK",l->Kplus_PIDK);
	tree->Branch("Polarity",l->Polarity);
	tree->Branch("bdtoutput",l->bdtoutput);
	tree->Branch("eminus_CosTheta",l->eminus_CosTheta);
	tree->Branch("eminus_M",l->eminus_M);
	tree->Branch("eminus_MINIP",l->eminus_MINIP);
	tree->Branch("eminus_MINIPCHI2",l->eminus_MINIPCHI2);
	tree->Branch("eminus_P",l->eminus_P);
	tree->Branch("eminus_PE",l->eminus_PE);
	tree->Branch("eminus_PT",l->eminus_PT);
	tree->Branch("eminus_PX",l->eminus_PX);
	tree->Branch("eminus_PY",l->eminus_PY);
	tree->Branch("eminus_PZ",l->eminus_PZ);
	tree->Branch("eminus_TRACK_Type",l->eminus_TRACK_Type);
	tree->Branch("eplus_CosTheta",l->eplus_CosTheta);
	tree->Branch("eplus_M",l->eplus_M);
	tree->Branch("eplus_MINIP",l->eplus_MINIP);
	tree->Branch("eplus_MINIPCHI2",l->eplus_MINIPCHI2);
	tree->Branch("eplus_P",l->eplus_P);
	tree->Branch("eplus_PE",l->eplus_PE);
	tree->Branch("eplus_PT",l->eplus_PT);
	tree->Branch("eplus_PX",l->eplus_PX);
	tree->Branch("eplus_PY",l->eplus_PY);
	tree->Branch("eplus_PZ",l->eplus_PZ);
	tree->Branch("eplus_TRACK_Type",l->eplus_TRACK_Type);
	tree->Branch("eventNumber",l->eventNumber);
	tree->Branch("gamgams_BKGCAT",l->gamgams_BKGCAT);
	tree->Branch("gamgams_CosTheta",l->gamgams_CosTheta);
	tree->Branch("gamgams_DIRA_OWNPV",l->gamgams_DIRA_OWNPV);
	tree->Branch("gamgams_ENDVERTEX_CHI2",l->gamgams_ENDVERTEX_CHI2);
	tree->Branch("gamgams_FD_CHI2",l->gamgams_FD_CHI2);
	tree->Branch("gamgams_M",l->gamgams_M);
	tree->Branch("gamgams_MC_GD_GD_MOTHER_ID",l->gamgams_MC_GD_GD_MOTHER_ID);
	tree->Branch("gamgams_MC_GD_GD_MOTHER_KEY",l->gamgams_MC_GD_GD_MOTHER_KEY);
	tree->Branch("gamgams_MC_GD_MOTHER_ID",l->gamgams_MC_GD_MOTHER_ID);
	tree->Branch("gamgams_MC_GD_MOTHER_KEY",l->gamgams_MC_GD_MOTHER_KEY);
	tree->Branch("gamgams_MC_MOTHER_ID",l->gamgams_MC_MOTHER_ID);
	tree->Branch("gamgams_MC_MOTHER_KEY",l->gamgams_MC_MOTHER_KEY);
	tree->Branch("gamgams_MINIP",l->gamgams_MINIP);
	tree->Branch("gamgams_MINIPCHI2",l->gamgams_MINIPCHI2);
	tree->Branch("gamgams_MM",l->gamgams_MM);
	tree->Branch("gamgams_MMERR",l->gamgams_MMERR);
	tree->Branch("gamgams_P",l->gamgams_P);
	tree->Branch("gamgams_PE",l->gamgams_PE);
	tree->Branch("gamgams_PT",l->gamgams_PT);
	tree->Branch("gamgams_PX",l->gamgams_PX);
	tree->Branch("gamgams_PY",l->gamgams_PY);
	tree->Branch("gamgams_PZ",l->gamgams_PZ);
	tree->Branch("gamgams_TAU",l->gamgams_TAU);
	tree->Branch("gamgams_X",l->gamgams_X);
	tree->Branch("gamgams_Y",l->gamgams_Y);
	tree->Branch("gamgams_Z",l->gamgams_Z);
	tree->Branch("muminus_CosTheta",l->muminus_CosTheta);
	tree->Branch("muminus_M",l->muminus_M);
	tree->Branch("muminus_MINIP",l->muminus_MINIP);
	tree->Branch("muminus_MINIPCHI2",l->muminus_MINIPCHI2);
	tree->Branch("muminus_P",l->muminus_P);
	tree->Branch("muminus_PE",l->muminus_PE);
	tree->Branch("muminus_PT",l->muminus_PT);
	tree->Branch("muminus_PX",l->muminus_PX);
	tree->Branch("muminus_PY",l->muminus_PY);
	tree->Branch("muminus_PZ",l->muminus_PZ);
	tree->Branch("muplus_CosTheta",l->muplus_CosTheta);
	tree->Branch("muplus_M",l->muplus_M);
	tree->Branch("muplus_MINIP",l->muplus_MINIP);
	tree->Branch("muplus_MINIPCHI2",l->muplus_MINIPCHI2);
	tree->Branch("muplus_P",l->muplus_P);
	tree->Branch("muplus_PE",l->muplus_PE);
	tree->Branch("muplus_PT",l->muplus_PT);
	tree->Branch("muplus_PX",l->muplus_PX);
	tree->Branch("muplus_PY",l->muplus_PY);
	tree->Branch("muplus_PZ",l->muplus_PZ);
	tree->Branch("nPVs",l->nPVs);
	tree->Branch("phi_mass",l->phi_mass);
	tree->Branch("piminus_PIDK",l->piminus_PIDK);
}

